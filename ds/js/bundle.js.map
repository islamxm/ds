{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./#src/js/modules/addInp.js","webpack:///./#src/js/modules/headInp.js","webpack:///./#src/js/modules/resCheck.js","webpack:///./#src/js/script.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","addInp","branchBtn","document","querySelector","dcBtn","btnAddEvent","btn","index","addEventListener","listItems","previousElementSibling","querySelectorAll","listParent","length","list","dcv","el","createElement","classList","add","innerHTML","append","createEl","testCt","testCtIndex","testList","resCheck","customInpAdd","chBtn","chIndex","chList","customChAdd","headInp","edit","style","display","inpRes","forEach"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./#src/js/script.js\");\n","import { resCheck } from \"./resCheck\";\r\n\r\nexport const addInp = () => {\r\n    // const btns = document.querySelectorAll('.aside__part_add');\r\n    \r\n    //Branchs\r\n    const branchBtn = document.querySelector('#branchAdd');\r\n    let branchIndex = 2;\r\n\r\n    //Data Centers\r\n    const dcBtn = document.querySelector('#dcAdd');\r\n    let dcIndex = 1;\r\n\r\n\r\n    function btnAddEvent(btn, index, name) {\r\n        btn.addEventListener('click', ()=> {\r\n            index++;\r\n            let listItems = btn.previousElementSibling.querySelectorAll('.aside__part_item');\r\n            let listParent = btn.previousElementSibling;\r\n    \r\n            if(listItems.length == 5) {\r\n                return;\r\n            } else {\r\n                createEl(index, name, listParent);\r\n            }\r\n        })\r\n    }\r\n    function createEl(index, name, list) {\r\n        let dcv = `\r\n            <span>${name} ${index}</span>\r\n            <input type=\"text\" value=\"\">\r\n        `;\r\n\r\n        \r\n        let el = document.createElement('div');\r\n        el.classList.add('aside__part_item', 'input');\r\n        el.innerHTML = dcv;\r\n\r\n        list.append(el);\r\n    }\r\n\r\n\r\n    function customInpAdd() {\r\n        let testCt = document.querySelector('#pubcAdd');\r\n        let testCtIndex = 11;\r\n        let testList = testCt.previousElementSibling;\r\n        \r\n        if(testCt) {\r\n            testCt.addEventListener('click', () => {\r\n    \r\n                testCtIndex++;\r\n    \r\n                if(testCtIndex < 15) {\r\n                    let el = document.createElement('div');\r\n                    el.classList.add('aside__part_item', 'checkbox');\r\n                    el.innerHTML = `\r\n                        <input type=\"checkbox\" id=\"ch${testCtIndex}\">\r\n                        <label for=\"ch${testCtIndex}\">\r\n                            <div class=\"custom__inp\">\r\n                                <input type=\"text\" value=\"Custom\">\r\n                                <button class=\"inp_res\" type=\"button\">\r\n                                    <img src=\"./img/inp-res.svg\" alt=\"\">\r\n                                </button>\r\n                            </div> \r\n                            <div class=\"icon\">\r\n                                <div class=\"icon__in\">\r\n                                    <svg width=\"11\" height=\"8\" viewBox=\"0 0 11 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path d=\"M3.62829 6.1773L0.947745 3.59953L0 4.51089L3.62829 8L11 0.91136L10.0523 8.60397e-06L3.62829 6.1773Z\" fill=\"white\"/>\r\n                                        </svg>\r\n                                </div>\r\n                            </div>\r\n                        </label>\r\n                    `;\r\n    \r\n                    testList.append(el);\r\n    \r\n                    resCheck();\r\n                } else {\r\n                    return;\r\n                }\r\n    \r\n                \r\n    \r\n            })\r\n        }\r\n    }\r\n\r\n    function customChAdd() {\r\n        const chBtn = document.querySelector('#chAdd');\r\n        let chIndex = 3;\r\n        let chList = chBtn.previousElementSibling;\r\n\r\n        if(chBtn) {\r\n            chBtn.addEventListener('click', () => {\r\n\r\n                chIndex++;\r\n\r\n                if(chIndex < 8) {\r\n                    let el = document.createElement('div');\r\n                    el.classList.add('aside__part_item', 'checkbox');\r\n                    el.innerHTML = `\r\n                        <input type=\"checkbox\" id=\"ch${chIndex}\">\r\n                        <label for=\"ch${chIndex}\">\r\n                            <div class=\"custom__inp\">\r\n                                <input type=\"text\" value=\"Custom\">\r\n                                <button class=\"inp_res\" type=\"button\">\r\n                                    <img src=\"./img/inp-res.svg\" alt=\"\">\r\n                                </button>\r\n                            </div> \r\n                            <div class=\"icon\">\r\n                                <div class=\"icon__in\">\r\n                                    <svg width=\"11\" height=\"8\" viewBox=\"0 0 11 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path d=\"M3.62829 6.1773L0.947745 3.59953L0 4.51089L3.62829 8L11 0.91136L10.0523 8.60397e-06L3.62829 6.1773Z\" fill=\"white\"/>\r\n                                        </svg>\r\n                                </div>\r\n                            </div>\r\n                        </label>\r\n                    `;\r\n    \r\n                    chList.append(el);\r\n    \r\n                    resCheck();\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n    btnAddEvent(branchBtn, branchIndex, 'Branch');\r\n    btnAddEvent(dcBtn, dcIndex, 'DC/CoLo/EDGE');\r\n    customInpAdd();\r\n    customChAdd();\r\n    \r\n\r\n    \r\n}","export const headInp = () => {\r\n    const el = document.querySelector('.main__head_item_inp');\r\n    const edit = document.querySelector('.main__head_item_btn');\r\n    if(el) {\r\n        el.addEventListener('input', () => {\r\n            if(el.value == '') {\r\n                edit.style.display = 'block';\r\n            } else {\r\n                edit.style.display = 'none';\r\n            }\r\n        })\r\n    }\r\n}","export const resCheck = () => {\r\n    let inpRes = document.querySelectorAll('.inp_res');\r\n\r\n    if(inpRes) {\r\n        inpRes.forEach(el => {\r\n            el.addEventListener('click', () => {\r\n                el.previousElementSibling.value = '';\r\n            })\r\n        })\r\n    }\r\n}","import { addInp } from \"./modules/addInp\"\nimport { headInp } from \"./modules/headInp\";\nimport { resCheck } from \"./modules/resCheck\";\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    \n    addInp();\n    headInp();\n    resCheck();\n    \n})\n\n\n\n\n\n"],"sourceRoot":""}